#!/usr/bin/bash

#########################################################
# Microsoft Build Open JDK build script
# - https://learn.microsoft.com/java/openjdk/download
# - This script is version independent
# - Create symlink if newer version is available
#   - ln -s 11.0.24 21.0.5
#########################################################

install_app() {
    mkdir -p "$target_dir"    # modules/apps/name/version
    mkdir -p "$tmp_dir"       # tmp directory
    cd "$tmp_dir"

    print_stderr "Downloading ${YELLOW}${app_name_version}${NC}"
    # Get main version from the version string
    main_version=${version%%.*}

    # Determine the machine architecture
    machine_arch=$(uname -m)
    if [ "$machine_arch" == "x86_64" ]; then
        machine_arch="x64"
    fi

    # Oracle JDK (need to accept the license, cannot download version 11)
    # url="https://download.oracle.com/java/${main_version}/archive/jdk-${version}_linux-${machine_arch}_bin.tar.gz" 
    url="https://aka.ms/download-jdk/microsoft-jdk-${version}-linux-${machine_arch}.tar.gz" # Switch to Microsoft OpenJDK
    run_command wget -nv -O "jdk-${version}_linux-${machine_arch}.tar.gz" "$url"

    print_stderr "Unzipping ${app_name} version ${version}"
    tar xf "jdk-${version}_linux-${machine_arch}.tar.gz"
    sub_shell mv *jdk-${version}*/* "$target_dir"
}

special_modulefiles() {
    # Any additional modulefile operations: add environment variables, aliases, etc.
    # app_root is a special variable that points to the app directory in modulefile[.lua]
    return
}

# Available variables:
# - ncpu: number of cores to use (default: 4) will be overwritten by SLURM_CPUS_PER_TASK

# - app_name:         name     of the app
# - version:          version  of the app
# - app_name_version: name/version

# - target_base_dir:  modules/apps/name
# - target_dir:       modules/apps/name/version
# - script_path:      modules/modulefiles/name/version
# - tmp_dir:          tmp directory (modules/tmp/name/version)

RED='\033[0;31m'    # Red      WARNING or ERROR
BLUE='\033[0;34m'   # Blue     Dependency or Modulefile Changes
YELLOW='\033[0;33m' # Yellow   App Name and/or Version
NC='\033[0m'        # No Color

if ! [ -d build-scripts ]; then
    printf "Please run this script under ${RED}modules${NC} directory.\n" 1>&2
    printf "And make sure you have your scripts in build-scripts folder.\n" 1>&2
    printf "    e.g. bash build-scripts/sra-tools/3.1.1\n" 1>&2
    exit 1
fi

source "build-scripts/common.sh"
main $@
