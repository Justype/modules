#!/usr/bin/bash
#SBATCH --cpus-per-task=1
#SBATCH --time=6:00:00
#SBATCH --mem=2GB
#SBATCH --job-name=make
#SBATCH --output=build_%j.out

# You can write your own scripts in region BUILD SCRIPT (line 55)
ncpu=${SLURM_CPUS_PER_TASK:-1} # number of cores to use

#region CONFIGS
# Define color codes
RED='\033[0;31m'
NC='\033[0m'     # No Color

if ! [ -d build-scripts ]; then
    printf "Please run this script under ${RED}modules${NC} directory.\n"
    printf "And make sure you have your scripts in build-scripts folder.\n"
    printf "    e.g. bash build-scripts/sra-tools/3.1.1\n"
    exit
fi

modules_root="$(pwd -P)"
script_path="$(realpath "$0")"
app_name_version="${script_path#*/build-scripts/}" # app/version
app_name="${app_name_version%/*}"                  # app
version="${app_name_version##*/}"                  # version
printf "[`date +"%Y-%m-%d %T"`] Start building ${RED}${app_name}${NC} version ${RED}${version}${NC}\n"

target_dir="${modules_root}/${app_name_version}"
script_base_dir="${modules_root}/modulefiles/${app_name}"
script_path="${modules_root}/modulefiles/${app_name_version}"
printf "[`date +"%Y-%m-%d %T"`] Target App Directory: $target_dir\n"
printf "[`date +"%Y-%m-%d %T"`] Target Module Script Path: $script_path\n"

if [ -d "$target_dir" ]; then
    printf "[`date +"%Y-%m-%d %T"`] WARNING: Target app exists!\n"
    printf "[`date +"%Y-%m-%d %T"`] Exit Building\n"
    exit
fi

# Function to run a command and exit if it fails
run_command() {
    "$@"
    if [ $? -ne 0 ]; then
        echo "[`date +"%Y-%m-%d %T"`] Command failed: $@"
        echo "[`date +"%Y-%m-%d %T"`] PWD: `pwd`"
        echo "[`date +"%Y-%m-%d %T"`] Removing target directory: $target_dir"
        rm -rf "$target_dir"
        exit 1
    fi
}
#endregion CONFIGS

#region BUILD SCRIPT
mkdir -p "$target_dir"



#endregion BUILD SCRIPT

#region Copying modulefiles
printf "[`date +"%Y-%m-%d %T"`] Copying modulefiles\n"
mkdir -p "$script_base_dir"
if [ -f "${modules_root}/build-scripts/${app_name}/template" ]; then
    printf "[`date +"%Y-%m-%d %T"`] $app_name specific template exists. Use it.\n"
    cp "${modules_root}/build-scripts/${app_name}/template" "$script_path"
    cp "${modules_root}/build-scripts/${app_name}/template.lua" "${script_path}.lua"
else
    printf "[`date +"%Y-%m-%d %T"`] $app_name specific template does exist. Use default template.\n"
    cp "${modules_root}/build-scripts/template" "$script_path"
    cp "${modules_root}/build-scripts/template.lua" "${script_path}.lua"
fi
#endregion

printf "[`date +"%Y-%m-%d %T"`] End building ${RED}${app_name}${NC} version ${RED}${version}${NC}\n"
