#!/usr/bin/bash

#########################################################
# Illumina ORA Decompress Build Script
# - https://support.illumina.com/sequencing/sequencing_software/DRAGENORA/software-downloads.html
# - setenv ORA_REF_PATH $app_root/oradata
#########################################################

install_app() {
    mkdir -p "$target_base_dir" # modules/apps/name
    mkdir -p "$tmp_dir"         # tmp directory
    cd "$tmp_dir"

    print_stderr "Downloading ${YELLOW}${app_name_version}${NC} binary"
    run_command wget -nv -O "orad.${version}.linux.tar.gz" https://s3.amazonaws.com/webdata.illumina.com/downloads/software/dragen-decompression/orad.${version}.linux.tar.gz

    print_stderr "Extracting orad.${version}.linux.tar.gz"
    tar -xzf orad.${version}.linux.tar.gz
    sub_shell mv orad.${version}.linux "$target_dir"
    # orad is under module folder, move it to bin
    mkdir -p "$target_dir/bin" # modules/apps/name/version/bin
    sub_shell mv "$target_dir/orad" "$target_dir/bin"
}

special_modulefiles() {
    # Any additional modulefile operations: add environment variables, aliases, etc.
    # app_root is a special variable that points to the app directory in modulefile[.lua]
    print_stderr "Adding ${BLUE}ORA_REF_PATH${NC} environment variable"
    echo "setenv ORA_REF_PATH \$app_root/oradata" >> "${script_path}"
    echo "setenv(\"ORA_REF_PATH\", pathJoin(app_root, 'oradata'))" >> "${script_path}.lua"
}

# Available variables:
# - ncpu: number of cores to use (default: 4) will be overwritten by SLURM_CPUS_PER_TASK

# - app_name:         name     of the app
# - version:          version  of the app
# - app_name_version: name/version

# - target_base_dir:  modules/apps/name
# - target_dir:       modules/apps/name/version
# - script_path:      modules/modulefiles/name/version
# - tmp_dir:          tmp directory (modules/tmp/name/version)

RED='\033[0;31m'    # Red      WARNING or ERROR
BLUE='\033[0;34m'   # Blue     Dependency or Modulefile Changes
YELLOW='\033[0;33m' # Yellow   App Name and/or Version
NC='\033[0m'        # No Color

if ! [ -d build-scripts ]; then
    printf "Please run this script under ${RED}modules${NC} directory.\n" 1>&2
    printf "And make sure you have your scripts in build-scripts folder.\n" 1>&2
    printf "    e.g. bash build-scripts/sra-tools/3.1.1\n" 1>&2
    exit 1
fi

source "build-scripts/common.sh"
main $@
