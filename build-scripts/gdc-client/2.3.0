#!/usr/bin/bash
#WHATIS:Transfering data from or to GDC

#########################################################
# GDC-Client Build Script
# - https://web.archive.org/web/20241006131639/https://gdc.cancer.gov/access-data/gdc-data-transfer-tool
# - This script is version specific
# - Version: 2.3.0 (glibc >= 2.29)
# - Download link at line 16
#########################################################

install_app() {
    mkdir -p "${target_dir}/bin"    # modules/apps/name/version/bin
    mkdir -p "$tmp_dir"             # tmp directory
    cd "$tmp_dir"

    print_stderr "Downloading ${YELLOW}${app_name_version}${NC}"
    run_command wget -q -N https://gdc.cancer.gov/system/files/public/file/gdc-client_2.3_Ubuntu_x64-py3.8-ubuntu-20.04.zip

    print_stderr "Unzipping gdc-client_2.3_Ubuntu_x64-py3.8-ubuntu-20.04.zip"
    sub_shell unzip -qn gdc-client_2.3_Ubuntu_x64-py3.8-ubuntu-20.04.zip
    sub_shell unzip -qn gdc-client_2.3_Ubuntu_x64.zip -d "${target_dir}/bin"
    # check glibc version, if < 2.29, show warning
    glibc_version=$(ldd --version | head -n 1 | awk '{print $NF}')
    if printf '%s\n' "$glibc_version" "2.28" | sort -V -C; then
        print_stderr "${RED}WARNING${NC}: glibc version $glibc_version is less than 2.29"
    fi
}

special_modulefiles() {
    # This function will not run if app specific modulefile exists
    # Any additional modulefile operations: add environment variables, aliases, etc.
    # app_root is a special variable that points to the app directory in modulefile[.lua]
    return
}

# Available variables:
# - ncpu: number of cores to use (default: 4) will be overwritten by SLURM_CPUS_PER_TASK

# - app_name:         name     of the app
# - version:          version  of the app
# - app_name_version: name/version

# - target_base_dir:  modules/apps/name
# - target_dir:       modules/apps/name/version
# - script_path:      modules/modulefiles/name/version
# - tmp_dir:          tmp directory (modules/tmp/name/version)

RED='\033[0;91m'    # Red      WARNING or ERROR
BLUE='\033[0;94m'   # Blue     Dependency or Modulefile Changes
YELLOW='\033[0;93m' # Yellow   App Name and/or Version
NC='\033[0m'        # No Color

if ! [ -d build-scripts ]; then
    printf "Please run this script under ${RED}modules${NC} directory.\n" 1>&2
    printf "And make sure you have your scripts in build-scripts folder.\n" 1>&2
    printf "    e.g. bash build-scripts/sra-tools/3.1.1\n" 1>&2
    exit 1
fi

source "build-scripts/common.sh"
main $@
